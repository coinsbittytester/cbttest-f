{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/kabam/OneDrive/Desktop/NUI/TINVS/ttest-1-f/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/kabam/OneDrive/Desktop/NUI/TINVS/ttest-1-f/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/kabam/OneDrive/Desktop/NUI/TINVS/ttest-1-f/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/kabam/OneDrive/Desktop/NUI/TINVS/ttest-1-f/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  margin-top: 24px;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 14px;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  background-image: url('/images/egg/2a.png');\\n  background-repeat: no-repeat;\\n  background-position: top right;\\n  min-height: 376px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useCallback}from'react';import styled from'styled-components';import{Heading,Card,CardBody,Button}from'@pancakeswap-libs/uikit';import{useWallet}from'@binance-chain/bsc-use-wallet';import BigNumber from'bignumber.js';import useI18n from'hooks/useI18n';import{useAllHarvest}from'hooks/useHarvest';import useFarmsWithBalance from'hooks/useFarmsWithBalance';import UnlockButton from'components/UnlockButton';import CakeHarvestBalance from'./CakeHarvestBalance';import CakeWalletBalance from'./CakeWalletBalance';import{usePriceCakeBusd}from'../../../state/hooks';import useTokenBalance from'../../../hooks/useTokenBalance';import{getCakeAddress}from'../../../utils/addressHelpers';import useAllEarnings from'../../../hooks/useAllEarnings';import{getBalanceNumber}from'../../../utils/formatBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledFarmStakingCard=styled(Card)(_templateObject());var Block=styled.div(_templateObject2());var CardImage=styled.img(_templateObject3());var Label=styled.div(_templateObject4(),function(_ref){var theme=_ref.theme;return theme.colors.textSubtle;});var Actions=styled.div(_templateObject5());var FarmedStakingCard=function FarmedStakingCard(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useWallet=useWallet(),account=_useWallet.account;var TranslateString=useI18n();var farmsWithBalance=useFarmsWithBalance();var cakeBalance=getBalanceNumber(useTokenBalance(getCakeAddress()),0);var eggPrice=usePriceCakeBusd().toNumber();var allEarnings=useAllEarnings();var earningsSum=allEarnings.reduce(function(accum,earning){return accum+new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber();},0);var balancesWithValue=farmsWithBalance.filter(function(balanceType){return balanceType.balance.toNumber()>0;});var _useAllHarvest=useAllHarvest(balancesWithValue.map(function(farmWithBalance){return farmWithBalance.pid;})),onReward=_useAllHarvest.onReward;var harvestAllFarms=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.prev=1;_context.next=4;return onReward();case 4:_context.next=8;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](1);case 8:_context.prev=8;setPendingTx(false);return _context.finish(8);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,6,8,11]]);})),[onReward]);return/*#__PURE__*/_jsx(StyledFarmStakingCard,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:TranslateString(542,'Honeycomb Farms & Pools')}),/*#__PURE__*/_jsx(CardImage,{src:\"/images/egg/2.png\",alt:\"cake logo\",width:64,height:64}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsx(Label,{children:TranslateString(544,'HNYCMB to Harvest')}),/*#__PURE__*/_jsx(CakeHarvestBalance,{earningsSum:earningsSum}),/*#__PURE__*/_jsxs(Label,{children:[\"~$\",(eggPrice*earningsSum).toFixed(2)]})]}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsx(Label,{children:TranslateString(546,'HNYCMB in Wallet')}),/*#__PURE__*/_jsx(CakeWalletBalance,{cakeBalance:cakeBalance}),/*#__PURE__*/_jsxs(Label,{children:[\"~$\",(eggPrice*cakeBalance).toFixed(2)]})]}),/*#__PURE__*/_jsx(Actions,{children:account?/*#__PURE__*/_jsx(Button,{id:\"harvest-all\",disabled:balancesWithValue.length<=0||pendingTx,onClick:harvestAllFarms,fullWidth:true,children:pendingTx?TranslateString(548,'Collecting HNYCMB'):TranslateString(999,\"Harvest all (\".concat(balancesWithValue.length,\")\"))}):/*#__PURE__*/_jsx(UnlockButton,{fullWidth:true})})]})});};export default FarmedStakingCard;","map":{"version":3,"sources":["C:/Users/kabam/OneDrive/Desktop/NUI/TINVS/ttest-1-f/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","useWallet","BigNumber","useI18n","useAllHarvest","useFarmsWithBalance","UnlockButton","CakeHarvestBalance","CakeWalletBalance","usePriceCakeBusd","useTokenBalance","getCakeAddress","useAllEarnings","getBalanceNumber","StyledFarmStakingCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","account","TranslateString","farmsWithBalance","cakeBalance","eggPrice","toNumber","allEarnings","earningsSum","reduce","accum","earning","pow","balancesWithValue","filter","balanceType","balance","map","farmWithBalance","pid","onReward","harvestAllFarms","toFixed","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useAllHarvest } from 'hooks/useHarvest'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\nimport { usePriceCakeBusd } from '../../../state/hooks'\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport { getCakeAddress } from '../../../utils/addressHelpers'\r\nimport useAllEarnings from '../../../hooks/useAllEarnings'\r\nimport { getBalanceNumber } from '../../../utils/formatBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url('/images/egg/2a.png');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()), 0)\r\n  const eggPrice = usePriceCakeBusd().toNumber()\r\n  const allEarnings = useAllEarnings()\r\n  const earningsSum = allEarnings.reduce((accum, earning) => {\r\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n\r\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onReward])\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(542, 'Honeycomb Farms & Pools')}\r\n        </Heading>\r\n        <CardImage src=\"/images/egg/2.png\" alt=\"cake logo\" width={64} height={64} />\r\n        <Block>\r\n          <Label>{TranslateString(544, 'HNYCMB to Harvest')}</Label>\r\n          <CakeHarvestBalance earningsSum={earningsSum}/>\r\n          <Label>~${(eggPrice * earningsSum).toFixed(2)}</Label>\r\n        </Block>\r\n        <Block>\r\n          <Label>{TranslateString(546, 'HNYCMB in Wallet')}</Label>\r\n          <CakeWalletBalance cakeBalance={cakeBalance} />\r\n          <Label>~${(eggPrice * cakeBalance).toFixed(2)}</Label>\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n            <Button\r\n              id=\"harvest-all\"\r\n              disabled={balancesWithValue.length <= 0 || pendingTx}\r\n              onClick={harvestAllFarms}\r\n              fullWidth\r\n            >\r\n              {pendingTx\r\n                ? TranslateString(548, 'Collecting HNYCMB')\r\n                : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\r\n            </Button>\r\n          ) : (\r\n            <UnlockButton fullWidth />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n"]},"metadata":{},"sourceType":"module"}