{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/kabam/OneDrive/Desktop/NUI/TINVS/ttest-1-f/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/kabam/OneDrive/Desktop/NUI/TINVS/ttest-1-f/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback}from'react';import{useWallet}from'@binance-chain/bsc-use-wallet';import{useDispatch}from'react-redux';import{fetchFarmUserDataAsync,updateUserStakedBalance,updateUserBalance}from'state/actions';import{stake,sousStake,sousStakeBnb}from'utils/callHelpers';import{useMasterchef,useSousChef}from'./useContract';var decimals=18;var useStake=function useStake(pid){decimals=18;if(pid===5)decimals=9;var dispatch=useDispatch();var _useWallet=useWallet(),account=_useWallet.account;var masterChefContract=useMasterchef();var handleStake=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(amount){var txHash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return stake(masterChefContract,pid,amount,account,decimals);case 2:txHash=_context.sent;dispatch(fetchFarmUserDataAsync(account));console.info(txHash);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),[account,dispatch,masterChefContract,pid]);return{onStake:handleStake};};export var useSousStake=function useSousStake(sousId,isUsingBnb,dec){decimals=dec;var dispatch=useDispatch();var _useWallet2=useWallet(),account=_useWallet2.account;var masterChefContract=useMasterchef();var sousChefContract=useSousChef(sousId);var handleStake=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(amount){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(sousId===0)){_context2.next=5;break;}_context2.next=3;return stake(masterChefContract,0,amount,account,decimals);case 3:_context2.next=12;break;case 5:if(!isUsingBnb){_context2.next=10;break;}_context2.next=8;return sousStakeBnb(sousChefContract,amount,account);case 8:_context2.next=12;break;case 10:_context2.next=12;return sousStake(sousChefContract,amount,account,decimals);case 12:dispatch(updateUserStakedBalance(sousId,account));dispatch(updateUserBalance(sousId,account));case 14:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}(),[account,dispatch,isUsingBnb,masterChefContract,sousChefContract,sousId]);decimals=18;return{onStake:handleStake};};export default useStake;","map":{"version":3,"sources":["C:/Users/kabam/OneDrive/Desktop/NUI/TINVS/ttest-1-f/src/hooks/useStake.ts"],"names":["useCallback","useWallet","useDispatch","fetchFarmUserDataAsync","updateUserStakedBalance","updateUserBalance","stake","sousStake","sousStakeBnb","useMasterchef","useSousChef","decimals","useStake","pid","dispatch","account","masterChefContract","handleStake","amount","txHash","console","info","onStake","useSousStake","sousId","isUsingBnb","dec","sousChefContract"],"mappings":"iVAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,sBAAT,CAAiCC,uBAAjC,CAA0DC,iBAA1D,KAAmF,eAAnF,CACA,OAASC,KAAT,CAAgBC,SAAhB,CAA2BC,YAA3B,KAA+C,mBAA/C,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,eAA3C,CAEA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAiB,CAChCF,QAAQ,CAAG,EAAX,CACA,GAAGE,GAAG,GAAK,CAAX,CACEF,QAAQ,CAAG,CAAX,CACF,GAAMG,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAJgC,eAKZD,SAAS,EALG,CAKxBc,OALwB,YAKxBA,OALwB,CAMhC,GAAMC,CAAAA,kBAAkB,CAAGP,aAAa,EAAxC,CAEA,GAAMQ,CAAAA,WAAW,CAAGjB,WAAW,0FAC7B,iBAAOkB,MAAP,mJACuBZ,CAAAA,KAAK,CAACU,kBAAD,CAAqBH,GAArB,CAA0BK,MAA1B,CAAkCH,OAAlC,CAA2CJ,QAA3C,CAD5B,QACQQ,MADR,eAEEL,QAAQ,CAACX,sBAAsB,CAACY,OAAD,CAAvB,CAAR,CACAK,OAAO,CAACC,IAAR,CAAaF,MAAb,EAHF,sDAD6B,+DAM7B,CAACJ,OAAD,CAAUD,QAAV,CAAoBE,kBAApB,CAAwCH,GAAxC,CAN6B,CAA/B,CASA,MAAO,CAAES,OAAO,CAAEL,WAAX,CAAP,CACD,CAlBD,CAoBA,MAAO,IAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAASC,UAAT,CAAqBC,GAArB,CAA6B,CACvDf,QAAQ,CAAGe,GAAX,CACA,GAAMZ,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAFuD,gBAGnCD,SAAS,EAH0B,CAG/Cc,OAH+C,aAG/CA,OAH+C,CAIvD,GAAMC,CAAAA,kBAAkB,CAAGP,aAAa,EAAxC,CACA,GAAMkB,CAAAA,gBAAgB,CAAGjB,WAAW,CAACc,MAAD,CAApC,CAEA,GAAMP,CAAAA,WAAW,CAAGjB,WAAW,2FAC7B,kBAAOkB,MAAP,2HACMM,MAAM,GAAK,CADjB,kDAEUlB,CAAAA,KAAK,CAACU,kBAAD,CAAqB,CAArB,CAAwBE,MAAxB,CAAgCH,OAAhC,CAAyCJ,QAAzC,CAFf,2CAGac,UAHb,kDAIUjB,CAAAA,YAAY,CAACmB,gBAAD,CAAmBT,MAAnB,CAA2BH,OAA3B,CAJtB,gEAMUR,CAAAA,SAAS,CAACoB,gBAAD,CAAmBT,MAAnB,CAA2BH,OAA3B,CAAoCJ,QAApC,CANnB,SAQEG,QAAQ,CAACV,uBAAuB,CAACoB,MAAD,CAAST,OAAT,CAAxB,CAAR,CACAD,QAAQ,CAACT,iBAAiB,CAACmB,MAAD,CAAST,OAAT,CAAlB,CAAR,CATF,yDAD6B,iEAY7B,CAACA,OAAD,CAAUD,QAAV,CAAoBW,UAApB,CAAgCT,kBAAhC,CAAoDW,gBAApD,CAAsEH,MAAtE,CAZ6B,CAA/B,CAcAb,QAAQ,CAAG,EAAX,CACA,MAAO,CAAEW,OAAO,CAAEL,WAAX,CAAP,CACD,CAvBM,CAyBP,cAAeL,CAAAA,QAAf","sourcesContent":["import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nlet decimals = 18\r\nconst useStake = (pid: number) => {\r\n  decimals = 18\r\n  if(pid === 5)\r\n    decimals = 9\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account, decimals)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb, dec) => {\r\n  decimals = dec\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account, decimals)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account, decimals)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n  decimals = 18\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake"]},"metadata":{},"sourceType":"module"}